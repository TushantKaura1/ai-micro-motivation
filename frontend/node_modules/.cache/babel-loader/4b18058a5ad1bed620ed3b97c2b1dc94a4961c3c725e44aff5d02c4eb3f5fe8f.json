{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';class TaskService{constructor(){this.api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add token to requests\nthis.api.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;});}async getTasks(){try{const response=await this.api.get('/tasks');return response.data;}catch(error){var _error$response,_error$response$data;throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Failed to fetch tasks');}}async createTask(taskData){try{const response=await this.api.post('/tasks',taskData);return response.data;}catch(error){var _error$response2,_error$response2$data;throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Failed to create task');}}async completeTask(taskId){try{const response=await this.api.post(\"/tasks/\".concat(taskId,\"/complete\"));return response.data;}catch(error){var _error$response3,_error$response3$data;throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Failed to complete task');}}async getNudge(){let mood=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'neutral';try{const response=await this.api.post('/nudge',{mood});return response.data;}catch(error){var _error$response4,_error$response4$data;throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Failed to get nudge');}}async getDailyDigest(){try{const response=await this.api.get('/daily-digest');return response.data;}catch(error){var _error$response5,_error$response5$data;throw new Error(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||'Failed to get daily digest');}}async getUserStats(){try{const response=await this.api.get('/user/stats');return response.data;}catch(error){var _error$response6,_error$response6$data;throw new Error(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.message)||'Failed to get user stats');}}}export default new TaskService();","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","TaskService","constructor","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","getTasks","response","get","data","error","_error$response","_error$response$data","Error","message","createTask","taskData","post","_error$response2","_error$response2$data","completeTask","taskId","_error$response3","_error$response3$data","getNudge","mood","arguments","length","undefined","_error$response4","_error$response4$data","getDailyDigest","_error$response5","_error$response5$data","getUserStats","_error$response6","_error$response6$data"],"sources":["/Users/tushant/Desktop/Daily MICRO TASK ASSISTANT/frontend/src/services/TaskService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nclass TaskService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Add token to requests\n    this.api.interceptors.request.use((config) => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    });\n  }\n\n  async getTasks() {\n    try {\n      const response = await this.api.get('/tasks');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to fetch tasks');\n    }\n  }\n\n  async createTask(taskData) {\n    try {\n      const response = await this.api.post('/tasks', taskData);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to create task');\n    }\n  }\n\n  async completeTask(taskId) {\n    try {\n      const response = await this.api.post(`/tasks/${taskId}/complete`);\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to complete task');\n    }\n  }\n\n  async getNudge(mood = 'neutral') {\n    try {\n      const response = await this.api.post('/nudge', { mood });\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to get nudge');\n    }\n  }\n\n  async getDailyDigest() {\n    try {\n      const response = await this.api.get('/daily-digest');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to get daily digest');\n    }\n  }\n\n  async getUserStats() {\n    try {\n      const response = await this.api.get('/user/stats');\n      return response.data;\n    } catch (error) {\n      throw new Error(error.response?.data?.message || 'Failed to get user stats');\n    }\n  }\n}\n\nexport default new TaskService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}